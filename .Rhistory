<<<<<<< HEAD
setwd("C:/Users/naumann/WZB Dropbox/Lennard Naumann/Dissertation/24-09 DYNAMICS program/24-09 Demographic change/exercises/migration")
emig <- read.table("estat_tps00177.tsv")
emig <- read.table("estat_tps00177.tsv", sep = "")
emig <- read.table("estat_tps00177.tsv", skip = 1)
emig <- read.table("estat_tps00177.tsv", skip = 1)
emig <- read.table("estat_tps00177.tsv", skip = 2)
emig <- read.table("estat_tps00177.tsv", sep = '\t', header = TRUE)
head(emig)
emig <- read.csv("tps00177_linear.csv")
head(emig)
imig <- read.csv("tps00176_linear.csv")
names(emig)
names(imig)
table(imig$geo)
library(tidyverse)
table(imig$sex)
names(imig)
table(imig$age)
table(imig$TIME_PERIOD)
# Reshape and merge data
dt <- left_join(
emig |>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, emig = OBS_VALUE),
imig |>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, imig = OBS_VALUE),
by = year
)
# Reshape and merge data
dt <- left_join(
(emig |>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, emig = OBS_VALUE)),
(imig |>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, imig = OBS_VALUE)),
by = year
)
# Reshape and merge data
dt <- left_join(
(emig |>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, emig = OBS_VALUE)),
(imig |>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, imig = OBS_VALUE)),
by = "year"
)
names(pop)
pop <- read.csv("tps00001_linear.csv")
names(pop)
# Merge data
dt <- left_join(emig, imig, pop, by = "year")
# Load and reshape data
emig <- read.csv("tps00177_linear.csv")|>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, emig = OBS_VALUE)
imig <- read.csv("tps00176_linear.csv")|>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, imig = OBS_VALUE)
pop <- read.csv("tps00001_linear.csv")|>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, pop = OBS_VALUE)
# Merge data
dt <- left_join(emig, imig, pop, by = "year")
head(dt)
# Merge data
dt <- left_join(emig, imig, pop, by = "year")
# Merge data
dt <- left_join(list(emig, imig, pop), by = "year")
# Merge data
dt <- emig |>
left_join(imig) |>
left_join(pop)
head(dt)
# Load and reshape data
emig <- read.csv("tps00177_linear.csv")|>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, emig = OBS_VALUE) |>
unique()
imig <- read.csv("tps00176_linear.csv")|>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, imig = OBS_VALUE) |>
unique()
pop <- read.csv("tps00001_linear.csv")|>
filter(geo == "NL") |>
transmute(year = TIME_PERIOD, pop = OBS_VALUE) |>
unique()
# Merge data
dt <- emig |>
left_join(imig) |>
left_join(pop)
head(dt)
# Load and reshape data
emig <- read.csv("tps00177_linear.csv")|>
filter(geo == "NL") |>
transmute(Year = TIME_PERIOD, emig = OBS_VALUE) |>
unique()
imig <- read.csv("tps00176_linear.csv")|>
filter(geo == "NL") |>
transmute(Year = TIME_PERIOD, imig = OBS_VALUE) |>
unique()
pop <- read.csv("tps00001_linear.csv")|>
filter(geo == "NL") |>
transmute(Year = TIME_PERIOD, pop = OBS_VALUE) |>
unique()
# Merge data
dt <- emig |>
left_join(imig) |>
left_join(pop)
# Merge data
dt <- emig |>
left_join(imig) |>
left_join(pop) |>
mutate(netmig = imig - emig)
ggplot(dt, aes(x = Year)) +
geom_line(aes(y = emig, color = "Emigration"), linewidth = 1.5) +
geom_line(aes(y = imig, color = "Immigration"), linewidth = 1.5) +
geom_bar(aes(y = netmig, fill = "Net Migration"), stat = "identity", alpha = 0.5) +
labs(title = "Migration Trends in the Netherlands", y = "Number of Migrants") +
scale_color_manual(name = "", values = c("Emigration" = "red", "Immigration" = "blue")) +
scale_fill_manual(name = "", values = c("Net Migration" = "lightgreen"))
ggplot(dt, aes(x = Year)) +
geom_line(aes(y = emig/1000, color = "Emigration"), linewidth = 1.5) +
geom_line(aes(y = imig/1000, color = "Immigration"), linewidth = 1.5) +
geom_bar(aes(y = netmig/1000, fill = "Net Migration"), stat = "identity", alpha = 0.5) +
labs(title = "Migration Trends in the Netherlands", y = "Number of Migrants (Thousands)") +
scale_color_manual(name = "", values = c("Emigration" = "red", "Immigration" = "blue")) +
scale_fill_manual(name = "", values = c("Net Migration" = "lightgreen"))
# Merge data
dt <- emig |>
left_join(imig) |>
left_join(pop) |>
# Calculate new variables
mutate(netmig = imig - emig,
netper1000 = 1000*netmig/pop)
head(dt)
ggplot(dt, aes(x = Year, y = netper1000)) +
geom_line(size = 1.5) +
labs(title = "Net Migration per 1,000 Inhabitants in the Netherlands", y = "Net Migration per 1,000 Inhabitants")
# Plot 3.1a
ggplot(dt, aes(x = factor(Year))) +
geom_line(aes(y = emig/1000, color = "Emigration"), linewidth = 1.5) +
geom_line(aes(y = imig/1000, color = "Immigration"), linewidth = 1.5) +
geom_bar(aes(y = netmig/1000, fill = "Net Migration"), stat = "identity", alpha = 0.5) +
labs(title = "Migration Trends in the Netherlands", y = "Number of Migrants (Thousands)") +
scale_color_manual(name = "", values = c("Emigration" = "red", "Immigration" = "blue")) +
scale_fill_manual(name = "", values = c("Net Migration" = "lightgreen"))
# Plot 3.1a
ggplot(dt, aes(x = factor(Year))) +
geom_line(aes(y = emig/1000, color = "Emigration"), linewidth = 1.5) +
geom_line(aes(y = imig/1000, color = "Immigration"), linewidth = 1.5) +
geom_bar(aes(y = netmig/1000, fill = "Net Migration"), stat = "identity", alpha = 0.5) +
labs(title = "Migration Trends in the Netherlands", y = "Number of Migrants (Thousands)", x = "Year") +
scale_color_manual(name = "", values = c("Emigration" = "red", "Immigration" = "blue")) +
scale_fill_manual(name = "", values = c("Net Migration" = "lightgreen"))
ggplot(dt, aes(x = factor(Year), y = netper1000)) +
geom_line(size = 1.5) +
labs(title = "Net Migration per 1,000 Inhabitants in the Netherlands", y = "Net Migration per 1,000 Inhabitants", x = "Year")
# Plot 3.1a
ggplot(dt, aes(x = Year)) +
geom_line(aes(y = emig/1000, color = "Emigration"), linewidth = 1.5) +
geom_line(aes(y = imig/1000, color = "Immigration"), linewidth = 1.5) +
geom_bar(aes(y = netmig/1000, fill = "Net Migration"), stat = "identity", alpha = 0.5) +
labs(title = "Migration Trends in the Netherlands", y = "Number of Migrants (Thousands)") +
scale_color_manual(name = "", values = c("Emigration" = "red", "Immigration" = "blue")) +
scale_fill_manual(name = "", values = c("Net Migration" = "lightgreen"))
source("code/helpers.R")
R
library(readxl)
=======
install.packages("rmarkdown")
source("code/helpers.R")
source("~/WZB Dropbox/MÃ¼ge Yerdenler/IPI research/15 www/web_helpers/make_files.R")
>>>>>>> 97566bab9c3e2f84a95d970989b924f90eb0032e
source("code/helpers.R")
source("code/helpers.R")
projects <- read_xlsx("projects.xlsx")
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
# Move files
file.copy(list.files("_projects", full.names = TRUE), "../wzb-ipi/_projects", recursive = TRUE)
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
projects <- read_xlsx("projects.xlsx")
make_bib(projects)
make_pages(projects)
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
source("code/helpers.R")
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
source("code/helpers.R")
source("code/helpers.R")
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
source("code/helpers.R")
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
source("code/helpers.R")
source("code/helpers.R")
projects <- read_xlsx("projects.xlsx")
source("code/helpers.R")
file.copy("projects.bib", "../wzb-ipi/_bibliography/projects.bib", overwrite = TRUE)
source("code/helpers.R")
library(glue)
library(glue)
source("code/helpers.R")
library(glue)
source("code/helpers.R")
library(glue)
source("code/helpers.R")
library(glue)
source("code/helpers.R")
file.copy("projects.bib", "../../../wzb-ipi.github.io/_bibliography/projects.bib", overwrite = TRUE)
library(glue)
source("code/helpers.R")
library(glue)
source("code/helpers.R")
getwd()
projects <- read_xlsx("projects.xlsx")
library("xlsx")
library(readxl)
projects <- read_xlsx("projects.xlsx")
projects <- read_xlsx("../IPI Research/15 www/web_helpers/projects.xlsx")
make_bib(projects)
make_pages(projects)
# Move files
file.copy(list.files("_projects", full.names = TRUE), "_projects", recursive = TRUE)
file.copy("projects.bib", "_bibliography/projects.bib", overwrite = TRUE)
library(glue)
library(readxl)
source("code/helpers.R")
library(glue)
library(readxl)
source("../IPI Research/15 www/web_helpers/code/helpers.R")
projects <- read_xlsx("../IPI Research/15 www/web_helpers/projects.xlsx")
make_bib(projects)
make_pages(projects)
# Move files
file.copy(list.files("_projects", full.names = TRUE), "_projects", recursive = TRUE)
file.copy("projects.bib", "_bibliography/projects.bib", overwrite = TRUE)
projects <- read_xlsx("../IPI Research/15 www/web_helpers/projects.xlsx")
source("../IPI Research/15 www/web_helpers/code/helpers.R")
projects <- read_xlsx("../IPI Research/15 www/web_helpers/projects.xlsx")
make_bib(projects)
make_pages(projects)
# Move files
file.copy(list.files("_projects", full.names = TRUE), "_projects", recursive = TRUE)
file.copy("projects.bib", "_bibliography/projects.bib", overwrite = TRUE)
library(glue)
source("code/helpers.R")
library(glue)
library(readxl)
source("../IPI Research/15 www/web_helpers/code/helpers.R")
projects <- read_xlsx("../IPI Research/15 www/web_helpers/projects.xlsx")
make_bib(projects)
make_pages(projects)
# Move files
file.copy(list.files("_projects", full.names = TRUE), "_projects", recursive = TRUE)
file.copy("projects.bib", "_bibliography/projects.bib", overwrite = TRUE)
library(glue)
library(readxl)
source("../IPI Research/15 www/web_helpers/code/helpers.R")
projects <- read_xlsx("../IPI Research/15 www/web_helpers/projects.xlsx")
make_bib(projects)
make_pages(projects)
# Move files
file.copy(list.files("_projects", full.names = TRUE), "_projects", recursive = TRUE)
file.copy("projects.bib", "_bibliography/projects.bib", overwrite = TRUE)
